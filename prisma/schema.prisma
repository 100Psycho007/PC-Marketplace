generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://neondb_owner:npg_nZejHy3Sxpb1@ep-sweet-darkness-a5i85gr0.us-east-2.aws.neon.tech/neondb?sslmode=require&channel_binding=require"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          String    @default("user")
  accounts      Account[]
  sessions      Session[]
  listings      Listing[]
  technician    Technician?
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Listing {
  id          String   @id @default(cuid())
  title       String
  description String   @db.Text
  price       Float
  condition   String
  category    String
  images      String[]
  location    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Technician {
  id             String   @id @default(cuid())
  name           String
  specialization String
  rating         Float
  experience     String
  location       String
  hourlyRate     Float
  image          String?
  services       String[]
  description    String
  availability   String?
  userId         String   @unique
  user           User     @relation(fields: [userId], references: [id])
}